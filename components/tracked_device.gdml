#include "res://includes/consts.gdml"
#include "res://components/alias_include.gdml"
 
<resource src="res://imgs/phone-graphic-2.png" id="calib_tutorial" />
<resource src="res://imgs/calibrate.webm" id="compass_video" />



#define APPLICATION_NAME owoTrackVR (very alpha)
#define APPLICATION_NAME_SHORT owoTrack

<!--
GDML design
TODO: <SButton> <signal-connector ...> </SButton>
TODO: install_paths="@{ [ #hello1, #hello2, #hello3, ... ] }"
TODO: resources="@{ [#resource1, resource2, etc] }"
TODO: scene scripts <GDScript>extends blah blah</GDScript>
-->


<MarginContainer
	connection=""
	shouldPredict="@{true}"
	finished_loading="@{false}"
	timer_running="@{false}"
	is_calibrated="@{false}"
	calibrating="@{0}"
	device_id="@{1}"
	device_name="Unknown"
	is_installed="@{false}"
	tracker_found="@{false}"
	is_installing="@{false}"
	install_result="None"
	install_success="@{false}"
	is_alive="@{false}"
	retries="@{0}"
	g-id="main"
> 
	<VBoxContainer visible="${(!main.finished_loading) && (main.retries > 3)}">
		<SHeader text="APPLICATION_NAME OpenVR initialization" />
		<SLabel text="Something has failed to initialize. This might be because SteamVR isn't completely functioning." />
		<SLabel text="If your VR headset is not connected, you will need to connect it to use this app." />
		<SLabel text="Alternatively, you can force install/uninstall if you know what you're doing." />
		<SLabel text="${'Result: ' + str(main.install_result)}" />
		<HBoxContainer>
			<SButton text="Install driver" g-id="install_btn_1" />
			<SButton text="Uninstall driver" g-id="uninstall_btn_1" />
		</HBoxContainer>
	</VBoxContainer>
	<VBoxContainer visible="${main.finished_loading}">
		<Node>
			<script src="res://components/tracked_device_component.gd" 
				device_id="${main.device_id}"
				data_block="#main"
				calib_btn="#calib"
				calib_start_btn="#calib_start_timer"
				calib_cancel_path="#calib_cancel"
				calib_continue_path="#calib_continue"
				timer_path="#timer"
				install_path="#install_btn"
				uninstall_path="#uninstall_btn"
				
				install_path_1="#install_btn_1"
				uninstall_path_1="#uninstall_btn_1"
				
				should_predict="${main.shouldPredict}"
			/> 
		</Node> 
		<SButton text="Uninstall driver" g-id="uninstall_btn" visible="${main.is_installed && (main.calibrating == 0)}" />

		<VBoxContainer visible="${!main.is_installed && !main.tracker_found && !main.is_installing}">
			<SHeader text="APPLICATION_NAME Installer" />
			<SLabel text="The APPLICATION_NAME_SHORT driver was not found in vrpathreg.exe's installed drivers list." />
			<SLabel text="You may install the driver by clicking the button below, then restarting SteamVR." />
			<SButton text="Install APPLICATION_NAME_SHORT driver" g-id="install_btn" />
		</VBoxContainer> 
		 
		<VBoxContainer visible="${main.is_installed && !main.tracker_found && !main.is_installing}">
			<SHeader text="APPLICATION_NAME (waiting)" />		
			<SLabel text="Due to some issues with SteamVR being big dumb and making a tracker steal controller input, you must start your controllers before the tracker can initialize. Please connect both your left and right controllers to move onto the next step." />
		</VBoxContainer>

		
		<VBoxContainer visible="${main.is_installing}">
			<SHeader text="APPLICATION_NAME Installer" />		
			<SLabel text="The (un)installation attempt has completed." visible="${main.install_success}" />
			<SLabel text="${'Result: ' + str(main.install_result)}" />
			<SLabel text="You should now restart SteamVR." visible="${main.install_success}"/>
		</VBoxContainer>
		
		<VBoxContainer visible="${main.tracker_found && (!main.is_installing)}">
			<VBoxContainer visible="${main.calibrating == 0}">
				<SHeader text="APPLICATION_NAME" />
				<SLabel text="${main.connection}" />
				
				<SHeader2 text="Device Data" />
				<GridContainer columns="@{2}">
					<!--
					<SLabel text="Device ID"/> <SLabel text="${str(main.device_id)}" />
					<SLabel text="Device Name"/> <SLabel text="${main.device_name}" />
					-->
					<SLabel text="Phone Connection Status"/>
						<SLabel text="Connected" visible="${main.is_alive}" />
						<SLabel text="Disconnected" visible="${!main.is_alive}" />

					<SLabel text="Position Prediction"/> <CheckBox g-bind="${main.shouldPredict}" />

				</GridContainer>
				 
				<SHeader2 text="Calibration" />
				<VBoxContainer visible="${main.is_alive}">
					<SLabel visible="${!main.is_calibrated}" text="!!! The playspace is not calibrated, please calibrate it before use!" />
					<SLabel visible="${main.is_calibrated}" text="You've already calibrated your playspace, but you may adjust it if it no longer lines up." />
					<SButton text="Enter calibration mode" g-id="calib" />
				</VBoxContainer>
				<SLabel visible="${!main.is_alive}" text="Please connect your phone to calibrate." />
			</VBoxContainer>
			
			<VBoxContainer visible="${main.calibrating == 1}">
				<SHeader text="Compass Calibration" />
				<HBoxContainer>
					<VideoPlayer stream="#compass_video" rect_min_size="@{Vector2(320, 320)}">
						<script src="res://components/looping_video.gd" />
					</VideoPlayer>
					<VBoxContainer size_flags_horizontal="@{SIZE_EXPAND_FILL}">
						<SLabel text="First, you should calibrate your phone's compass. The compass is used to avoid yaw drifting, but an uncalibrated compass may give you problems."/>
						<SLabel text="Move your phone in the 8-figure movement as shown in the video a few times, then click continue." />
						<SButton text="Continue" g-id="calib_continue" />
					</VBoxContainer>
				</HBoxContainer>
			</VBoxContainer>
			
			<VBoxContainer visible="${main.calibrating == 2}">
				<SHeader text="Calibration" />
				<HBoxContainer>
					<TextureRect texture="#calib_tutorial" />
					<VBoxContainer size_flags_horizontal="@{SIZE_EXPAND_FILL}">
						<SLabel text="You will now probably see a tracker in front of you. While the timer is running, simply point the phone forward in the same orientation as your head (see picture)."/>
						<SLabel text="You MUST point your phone forward. Do NOT point your phone up or down!!!!"/>
						<SLabel text="You will have 5 seconds to make sure your phone is oriented correctly, and the calibration will be complete."/>
						<HBoxContainer>
							<STimer g-id="timer" />
							<HBoxContainer visible="${!main.timer_running}">
								<SButton text="Start 5 second timer" g-id="calib_start_timer" />
								<SButton text="Cancel" g-id="calib_cancel" />
							</HBoxContainer>
						</HBoxContainer>
					</VBoxContainer>
				</HBoxContainer>
			</VBoxContainer>
		</VBoxContainer>
	</VBoxContainer>
</MarginContainer>